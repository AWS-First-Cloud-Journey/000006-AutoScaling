[
{
	"uri": "/vi/",
	"title": "Triển khai Ứng dụng ShareNote với Auto Scaling Group",
	"tags": [],
	"description": "",
	"content": "Triển khai Ứng dụng ShareNote với Auto Scaling Group Tổng quan Ở bài thực hành này, chúng ta sẽ tiến hành việc triển khai ứng dụng với Auto Scaling Group nhằm đảm bảo khả năng co giãn của ứng dụng đó theo nhu cầu của người truy cập. Thêm vào đó, chúng ta cũng sẽ triển khai Load Balancer nhằm cân bằng tải và điều phối các yêu cầu truy cập từ phía người dùng đến Application Tier của chúng ta.\nHãy chắc chắn rằng bạn đã xem qua tài liệu Triển khai Ứng dụng ShareNote trên Máy ảo Windows/AmazonLinux và nắm được cách triển khai ứng dụng trên máy ảo. Chúng ta sẽ cần sử dụng máy ảo được triển khai ShareNote cho việc triển khai đồng loạt và mở rộng trong Auto Scaling Group.\nAuto Scaling Group Auto Scaling Group (nhóm co giãn tự động) là một nhóm các EC2 Instance. Nhóm này có thể co giãn số lượng của các EC2 Instance thành viên theo chính sách co giãn (scaling policy) mà bạn đặt ra.\nLaunch Template Launch Template (khuôn mẫu khởi tạo) là một tính năng giúp bạn tạo khuôn mẫu cho việc khởi tạo các EC2 Instance. Nhờ thế, bạn có thể quy trình hóa và đơn giản hóa công tác khởi tạo các EC2 Instance cho dịch vụ Auto Scaling (co giãn tự động).\nLoad Balancer Load Balancer (máy cân bằng tải) là một công cụ có thể phân phối lưu lượng dữ liệu được trao đổi tới các tài nguyên AWS (cụ thể trong bài lab này là các EC2 Instances) trong Target Group.\nTarget Group Target Group (nhóm mục tiêu) là một nhóm những thành phần tài nguyên AWS sẽ nhận lưu lượng dữ liệu được phân phối và truyền tải bởi Load Balancer.\nNội dung:  Các bước chuẩn bị Khởi tạo Launch Template Khởi tạo Target Group Khởi tạo Load Balancer Khởi tạo Auto Scaling Group Kiểm tra kết quả  "
},
{
	"uri": "/vi/1-prerequisite/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Sơ đồ tổng quan bài thực hành Trong bài thực hành này, chúng ta cần chuẩn bị một số dịch vụ để có thể tiến hành triển khai ứng dụng ShareNote sử dụng Auto Scaling Group cùng với Elastic Load Balancer. Một cách tổng quan, chúng ta sẽ triển khai ứng dụng ShareNote theo kiến trúc như sau:\n"
},
{
	"uri": "/vi/1-prerequisite/1-security-group/",
	"title": "Tạo Security Group",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ bắt đầu bằng việc tạo một Security Group cho tất cả các thành phần trong kiến trúc của bài lab này.\nNội dung:\n Tạo Security Group  Để xác định các rule Inbound cần có, chúng ta liệt kê ra các yêu cầu như sau:\n Người dùng truy cập từ ngoài vào ứng dụng ShareNote thông qua cổng 80 bằng giao thức HTTP với Source IP bất kì. Load Balancer sẽ điều phối các yêu cầu này đến các server thông qua cổng 8080 với Source IP trong VPC. Các Application server sẽ giao tiếp với Database thông qua cổng 3306 với Source IP trong VPC. Chúng ta sẽ mở truy cập SSH để có thể kết nối đến instance để triển khai ứng dụng.  Trên thực tế, chúng ta nên tạo các security group riêng biệt cho từng thành phần. Tuy nhiên trong khuôn khổ bài thực hành này, chúng ta sẽ sử dụng một security group (Các rule không trùng lẫn nhau).\n\rTạo Security Group  Truy cập vào EC2 Management Console bằng cách gõ và chọn dịch vụ EC2 trong thanh tìm kiếm.  Ở thanh điều hướng bên trái, chọn Security Groups. Ở trang Security Groups, chọn Create Security Group. Ở trang Create security group, thiết lập các thông số như sau:  Mục Basic details:  Security group name: Nhập vào tên security group (VD: sharenote-sg) Description: Nhập vào diễn giải của security group. VPC: Chọn Default VPC. Bạn sẽ xây dựng bài lab này bên trong Default VPC. Trên thực tế, AWS khuyến cáo rằng bạn không không nên sử dụng Default VPC cho mục dích sản xuất. Tuy nhiên, bạn sẽ sử dụng Default VPC để được thuận tiện trong khuôn khổ bài thực hành này.\n\r   Mục Inbound rules: Thêm các Inbound rule như đề cập ở trên. Chọn Add rule để thêm một rule.  Type: HTTP | Source: Anywhere Type: Custom TCP | Port range: 8080 | Source: Custom 172.31.0.0/16 (Default VPC CIDR block) Type: MySQL/Aurora | Source: Custom 172.31.0.0/16 (Default VPC CIDR block) Type: SSH | Source: My IP      Chọn Create security group.  Đến đây, chúng ta đã hoàn thành việc tạo Security Group.\n"
},
{
	"uri": "/vi/2-launch-template/",
	"title": "Khởi tạo Launch Template",
	"tags": [],
	"description": "",
	"content": "Ở phần này, bạn sẽ tạo một Launch Template sử dụng AMI bạn đã tạo từ Ubuntu Instance ở bước trước.\nNội dung:\n Tạo Launch Template  Tạo Launch Template Để tạo Launch Template, chúng ta thực hiện như sau:\n Truy cập vào EC2 Management Console. Ở thanh điều hướng bên trái, chọn Launch Templates. Ở trang khởi đầu, chọn Create launch template. Ở trang Create launch template, thiết lập launch template với các thông số như sau:  Launch template name and description:  Launch template name - required: sharenote-template (Tên do bạn chọn)   Amazon machine image (AMI):  AMI: Lựa chọn sharenote-image mà chúng ta đã tạo ở bước trước.    Instance type:  Instance type: Lựa chọn t2.micro (Đây là lựa chọn cho bài thực hành, thực tế sẽ có yêu cầu cấu hình lớn hơn)   Key pair (login)  Key pair name: Lựa chọn key pair đang sử dụng của bạn.   Network settings:  Networking platform: Chọn Virtual Private Cloud (VPC) Security groups: Lựa chọn Security Group mà bạn đã tạo ra và phù hợp. (VD: sharenote-sg)      Chọn Create launch template để tạo template. Chọn View lauch template để xem template vừa được khởi tạo.  "
},
{
	"uri": "/vi/1-prerequisite/2-database/",
	"title": "Tạo ShareNote Database",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ khởi tạo một cơ sở dữ liệu (database) sử dụng AWS RDS cho ứng dụng ShareNote được triển khai ở bước tiếp theo.\nNội dung:\n 1. Tạo cơ sở dữ liệu với AWS RDS  1. Tạo cơ sở dữ liệu với AWS RDS  Truy cập vào RDS Management Console bằng cách gõ và chọn RDS trong thanh tìm kiếm. Chọn Create database. Lựa chọn các thông số thiết lập sau cho Database: (Các thông số không được nhắc đến sẽ giữ ở thiết lập mặc định)  Mục Choose a database creation method: Chọn Standard create Mục Engine options: Chọn MySQL Ứng dụng ShareNote sử dụng MySQL nên chúng ta cũng sẽ lựa chọn MySQL Engine.\n\r Mục Templates: Chọn Free tier (Đây là lựa chọn đối với mục tiêu là bài thực hành.)  Mục Settings:   DB instance identifier: nhập tên cho DB Instance (ví dụ: sharenote-db)\n  Settings:\n Master username: thiết lập tài khoản master dùng để truy cập vào cơ sở dữ liệu (ví dụ: admin). Master password: thiết lập mật khẩu với ít nhất 8 kí tự và hạn chế nhập kí tự đặc biệt (ví dụ: admin123). Nếu bạn nhập kí tự đặc biệt (ví dụ: ! hoặc @ hoặc #), khi bạn kết nối tới cơ sở dữ liệu trên DB Instance từ EC2 Instance sử dụng hệ điều hành Ubuntu ở phần sau, bạn sẽ phải thực hiện thao tác bỏ qua (escape) đối với các kí tự đặc biệt ấy, và điều đó sẽ gia tăng độ phức tạp của bài lab này một cách không cần thiết.\n\r Confirm password: Nhập lại mật khẩu ở phía trên.      Mục DB Instance Class: dùng để chọn phân loại DB Instance. Có 3 phân loại: tiêu chuẩn (Standard), tối ưu bộ nhớ (Memory optimized), và hiệu suất linh dộng (Burstable). Bạn vui lòng để cấu hình mặc định cho bài lab này. Mục Storage: dùng để thiết lập cấu hình cho bộ lưu trữ của DB Instance. Bạn vui lòng để cấu hình mặc định cho bài lab này. Mục Availability \u0026amp; durability: dùng để kích hoạt tính năng Multi-AZ. Vì bạn đang sử dụng bản free-tier, nên bạn không thể sử dụng tính năng này vì nó có tính phí. Mục Connectivity:  Virtual private cloud (VPC): giữ nguyên VPC mặc định. Subnet group: giữ nguyên Subnet group mặc định. Public access: chọn No VPC security group: Chọn Choose existing và giữ nguyên default. Existing VPC security groups: Chọn tên Security Group mà bạn đã tạo ở phần 1 (ví dụ: sharenote-sg) Availability Zone: chọn ap-southeast-1b    Mục Database Authentication: giữ nguyên mặc định Password Authentication. Mở rộng mục Additional configuration:  Database options:  Initial database name: Nhập vào tên của database sẽ được khởi tạo ban đầu (ví dụ: NoteDB) Các phần còn lại, bạn hãy giữ nguyên mặc định.        Kiểm tra lại và chọn Create database. Database sẽ được khởi tạo và ở trạng thái Creating. Hãy đợi cho Status chuyển sang Available để có thể sử dụng. Chọn vào sharenote-db trong danh sách Databases. Ở trang thông tin database, tab Connectivity \u0026amp; security, ghi chú lại Endpoint của database. Chúng ta sẽ sử dụng thông tin này cho việc cấu hình ở bước kế tiếp.   Đến đây, chúng ta đã hoàn thành việc tạo Database cho ShareNote.\n"
},
{
	"uri": "/vi/3-target-group/",
	"title": "Khởi tạo Target Group",
	"tags": [],
	"description": "",
	"content": "Ở phần này, bạn sẽ tạo một Target Group để làm mục tiêu Load Balancer truyển tải lưu lượng dữ liệu tới.\nNội dung:\n Tạo Target Group  Tạo Target Group Để tạo Launch Template, chúng ta thực hiện như sau:\n Truy cập vào EC2 Management Console. Ở thanh điều hướng bên trái, chọn Target Groups. Ở trang Target groups, chọn Create launch template. Ở trang Specify group details, thiết lập các thông số như sau cho target group:  Basic configuration:  Choose a target type: Chọn Instances Target group name: Nhập tên của target group (VD: sharenote-tg) Protocol: HTTP Port: 8080 (Port sử dụng bởi ShareNote)   Các mục còn lại để mặc định   Chọn Next.  Ở trang Register targets, chọn Create target group.  Danh sách target group sẽ liệt kê target group mà chúng ta vừa tạo trong danh sách.\n"
},
{
	"uri": "/vi/1-prerequisite/3-deploy-sharenote/",
	"title": "Triển khai Máy ảo ShareNote",
	"tags": [],
	"description": "",
	"content": "Trong bài thực hành này, chúng ta sẽ thiết lập cấu hình Database cho ShareNote. Sau đó,chúng ta sẽ thiết lập tự động khởi chạy ứng dụng khi khởi chạy Instance.\nNếu bạn đã làm bài số 000005 Triển Khai AWS RDS Kết Hơp với ShareNote, bạn có thể thấy rằng bạn đã triển khai ShareNote một cách thủ công. Ở bài này, bạn sẽ thiết lập khởi chạy ứng dụng cho EC2 Instance để mỗi khi một EC2 Instance mới được tạo ra bởi Auto Scaling Group, EC2 Instance đó sẽ tự động được thiết lập để triển khai ứng dụng ShareNote.\n\rNội dung:\n Thiết lập cấu hình Database cho ShareNote Thiết lập khởi chạy ứng dụng khi khởi chạy instance  Để vượt qua bài lab này, bạn cần có triển khai sẵn một Ubuntu Instance. Nếu bạn chưa biết cách làm, hãy tham khảo bài Sử dụng Máy ảo Linux. Lưu ý, hãy chọn AMI Ubuntu Server 20.04 LTS (HVM) thay vì Amazon Linux 2 AMI (HVM).\n\rThiết lập cấu hình Database cho ShareNote Chúng ta sẽ bắt đầu tạo một đoạn script thiết lập (startup.sh) để khởi chạy ứng dụng ShareNote. Đoạn script startup.sh sẽ được cấu hình để tự động triển khai khi EC2 Instance khởi chạy.\nBạn sẽ sử dụng Vi Editor, một trình soạn thảo văn bản được sử dụng phổ biến trên hệ điều hành Linux/Unix, để viết script thiết lập startup.sh. Bạn có thể tham khảo thêm tại link này hoặc tự tìm hiểu.\n\r  Kết nối đến Ubuntu instance đã được khởi tạo.\n  Từ cửa sổ dòng lệnh, nhập lệnh sau để tạo tập tin chứa script bằng vi editor\nsudo vi /etc/init.d/startup.sh\r  Nhấn phím i rồi nhập nội dung script như sau:\n# Cập nhật Ubuntu Instane và cài đặt JRE\rsudo apt update\rsudo apt install openjdk-8-jre-headless\r# Thiết lập cấu hình Database cho ShareNote\rexport MYSQL_HOST=\u0026lt;Replace with your DB Isntance Endpoint\u0026gt;\rexport MYSQL_DATABASE=NoteDB\rexport MYSQL_USER=admin\rexport MYSQL_PASSWORD=\u0026lt;Replace with your password\u0026gt;\r# Tải xuống và khởi chạy ứng dụng ShareNote.\rwget \u0026#34;https://example-corp-storage.s3.amazonaws.com/deploy-artifact/demo-0.0.1-SNAPSHOT.jar\u0026#34; -O demo-0.0.1-SNAPSHOT.jar\rjava -jar demo-0.0.1-SNAPSHOT.jar \u0026amp;\r  Nhấn phím ESC rồi gõ :wq để lưu lại script và thoát ra ngoài.\n  Thiết lập thuộc tính của script để bạn có kích hoạt được (executable) bằng lệnh:\nsudo chmod +x /etc/init.d/startup.sh\r  Dựa vào đoạn mã trên, chúng ta thấy:\n MYSQL_HOST: Chứa thông tin Endpoint của DB Instance mà chúng ta đã tạo ở phần trước. (Ví dụ: sharenote-db.caslv76qrmsi.ap-southeast-1.rds.amazonaws.com) MYSQL_DATABASE: Là tên của Database được khởi tạo trong quá trình tạo DB instance ở phần trước. (Ví dụ: NoteDB) MYSQL_USER: User mặc định khi khởi tạo. (Ví dụ: admin) MYSQL_PASSWORD: Mật khẩu được đặt cho user admin (Ví dụ: admin123)   Bạn có thể kiểm tra script thiết lập của mình bằng cách khởi chạy thử nó với dòng lệnh dưới đây: . /etc/init.d/startup.sh\r ShareNote sẽ được khởi chạy và kết nối đến Database như hình sau.   Thiết lập khởi chạy ứng dụng khi khởi chạy instance Trên Ubuntu, chúng ta có thể thiết lập hệ thống để nó tự động triển khai đoạn script khi EC2 Instance được khởi chạy.\n Kết nối đến Ubuntu instance đã được khởi tạo. Chạy lệnh sau để mở thiết lập crontab và thiết lập việc khởi chạy ứng dụng khi instance được khởi chạy. crontab -e\r Trong phần chọn editor (select editor), gõ số 2 rồi nhấn phím Enter để chọn /user/bin/vim.basic Nhấn phím i để có thể chỉnh sửa rồi nhập nội dung sau vào cuối các nội dung để thiết lập tự động triển khai script khi khởi động. @reboot /etc/init.d/startup.sh\r Khi nhập xong, nhấn phím ESC rồi gõ :wq để lưu lại script và thoát ra ngoài crontab.   "
},
{
	"uri": "/vi/1-prerequisite/4-create-ami/",
	"title": "Khởi tạo AMI từ Máy ảo",
	"tags": [],
	"description": "",
	"content": "Ở bước này, bạn sẽ khởi tạo một Amazon Machine Image (AMI) cho Ubuntu Instance vừa được thiết lập ở bước trước. AMI là một bản chụp cấu hình của EC2 Instance cho phép bạn triển khai nhiều EC2 Instance với cấu hình tương tự với EC2 Instance gốc. AMI thường được sử dụng bên trong Launch Template để tạo khuôn mẫu cho các EC2 Instances.\nNội dung:\n Khởi tạo AMI từ Máy ảo  Khởi tạo AMI từ Máy ảo  Truy cập vào EC2 Management Console. Chọn Instances. Trong danh sách instance, chọn Ubuntu instance mà chúng ta đã thiết lập ở phần trước. Chọn menu Actions. Trong Image and templates, chọn Create image.  Ở trang Create image, thiết lập các thông tin cho AMI như sau:  Image name: Nhập tên AMI (VD: sharenote-image) Các thông số khác có thể để mặc định   Chọn Create image. AMI sẽ bắt đầu được khởi tạo và chúng ta có thể kiểm tra AMI bằng cách chọn AMIs ở thanh điều hướng bên tay trái. Đợi cho Status chuyển thành Available thì AMI đã sẵn sàng để sử dụng.  Đến đây, chúng ta đã hoàn thành các bước chuẩn bị cho việc triển khai ShareNote với Auto Scaling Group.\nỞ phần kế tiếp, chúng ta sẽ bắt đầu khởi tạo và triển khai nội dung chính của bài thực hành này.\n"
},
{
	"uri": "/vi/5-load-balance/",
	"title": "Khởi tạo Load Balancer",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ triển khai Load Balancer điều phối các request từ người dùng đến các EC2 instance chạy ứng dụng ShareNote của chúng ta.\nNội dung:\n Tạo Load Balancer  Tạo Load Balancer   Truy cập vào EC Management Console.\n  Ở thanh điều hướng bên trái, chọn Load Balancers.\n  Ở trang danh sách Load Balancer, chọn Create Load Balancer.\n  Ở trang Select load balancer type, chọn Create ở mục Application Load Balancer.   Ở trang Step 1: Configure Load Balancer, thiết lập các thông số như sau:\n Basic Configuration:  Name: Nhập tên của Load Balancer (VD: sharenote-lb) Scheme: internet-facing IP address type: ipv4   Availability Zones:  Availability Zones: Chọn hai AZ tương tự chúng ta đã chọn ở phần trước (VD: ap-northeast-1a và ap-northeast-1c)      Chọn Next: Configure Security Settings   Ở trang Step 2: Configure Security Settings, chọn Next: Configure Security Groups.\n  Ở trang Step 3: Configure Security Groups:\n Assign a security group: Chọn Select an existing security group  Chọn Security Group mà bạn lựa chọn (VD: sharenote-sg)      Chọn Next: Configure Routing.\n  Ở trang Step 4: Configure Routing:\n Target group:  Target group: Chọn Existing target group Name: Lựa chọn target group mà chúng ta đã tạo ở bước trước đó (VD: sharenote-tg) (Khi chỉ có một target group, hệ thống sẽ tự động chọn nó)      Chọn Next: Register Targets   Ở trang Step 5: Register Targets, chọn Next: Review.\n  Chọn Create.\n  Trang tạo Load Balancer thành công sẽ hiển thị ra cho bạn. Chọn Close để trở về danh sách Load Balancer\n  Quá trình tạo Load Balancer sẽ mất khoảng 5-10 phút để hoàn thành. Bạn có thể kiểm tra sự thay đổi trạng thái từ provisioning sang active ở danh sách Load Balancer.\nHãy ghi chú lại DNS name của Load Balancer lại vì đây sẽ là địa chỉ chúng ta dùng để truy cập vào ứng dụng dược triển khai.\nĐến đây, chúng ta đã hoàn thành việc triển khai ứng dụng Share Note với Auto Scaling Group và Elastic Load Balancer. Với mô hình này, bạn có thể triển khai ứng dụng của mình với tính sẵn sàng cao, dễ dàng mở rộng và cân bằng tải các yêu cầu từ người dùng.\nỞ bước kế tiếp, chúng ta sẽ thử nghiệm việc mở rộng dựa trên tăng số lượng truy cập đến ứng dụng của chúng ta và xem phản hồi của Auto Scaling Group đối với sự gia tăng này.\n"
},
{
	"uri": "/vi/4-asg/",
	"title": "Khởi tạo Auto Scaling Group",
	"tags": [],
	"description": "",
	"content": "Ở phần này, chúng ta sẽ triển khai một Auto Scaling Group cho ứng dụng ShareNote để đảm bảo ứng dụng của chúng ta sẽ được triển khai với tính sẵn sàng cao và đáp ứng mục tiêu của bài thực hành này.\nNội dung:\n Tạo AutoScaling Group  Tạo AutoScaling Group  Truy cập vào EC2 Management Console. Ở thanh điều hướng bên trái, chọn Auto Scaling Groups. Ở trang Auto Scaling Groups, chọn Create an Auto Scaling group. Bắt đầu với trang Choose launch template or configuration, thiết lập các thông tin như sau:  Name: Nhập vào tên của Auto Scaling Group (VD: sharenote-asg) Launch template: Chọn launch template chúng ta đã tạo trước đó (VD: sharenote-template)   Chọn Next.  Ở trang Configure settings:  Network:  Subnets: Lựa chọn 2 subnet ở hai AZ khác nhau (VD: ap-northeast-1a và ap-northeast-1c)     Chọn Next.  Ở trang Configure advanced options:  Load balancing - optional: Chọn Enable load balancing  Chọn Application Load Balancer or Network Load Balancer. Choose a target group for your load balancer: Chọn target group mà chúng ta đã tạo trước đó. (VD: sharenote-tg)     Chọn Next.  Ở trang Configure group size and scaling policies:  Group size - optional:  Desired capacity: Nhập 1 (Default) Minimum capacity: Nhập 1 (Default) Maximum capacity: Nhập 3   Scaling policies - optional: Lựa chọn trong bài thực hành này nhằm tạo điều kiện dễ dàng hơn cho bước kiểm tra được thực hiện tiếp theo. Bạn hoàn toàn có thể thiết lập chính sách co dãn theo nhu cầu của bạn.  Chọn Target tracking scaling policy Metric type: Chọn Application Load Balancer request count per target Target group: Chọn target group mà chúng ta đã tạo (VD: sharenote-tg) Target value: Nhập 30     Chọn Next.  Ở trang Add notifications, chọn Next. Ở trang Add tags, chọn Next. Ở trang Review, chọn Create Auto Scaling Group  Quá trình khởi tạo Auto Scaling Group sẽ được thực hiện, Auto Scaling Group vừa được tạo sẽ hiển thị trong danh sách, và bạn có thể chọn vào nó để xem thông tin chi tiết.\nAuto Scaling Group sẽ triển khai các instance, chúng ta có thể theo dõi ở trang Instance management. Các instance có tình trạng InService là các instance đã sẵn sàng hoạt động. "
},
{
	"uri": "/vi/6-testing/",
	"title": "Kiểm tra Kết quả",
	"tags": [],
	"description": "",
	"content": "Trong bài thực hành này, chúng ta sẽ kiếm tra truy cập tới ShareNote và tiến hành tăng số lượng yêu cầu truy cập đến ứng dụng thông qua việc mở đồng loạt nhiều kết nối sử dụng công cụ Webserver Stress Tool 8. Bạn hãy nhấn vào link này để tải về.\nNội dung:\n Kiểm tra hoạt động của ứng dụng ShareNote Kiểm tra khả năng tự mở rộng của ứng dụng Share Note được triển khai  Kiểm tra hoạt động của ứng dụng ShareNote  Tìm DNS Name của Load Balancer đã tạo ở bước 4.  Truy cập vào DNS Name ấy bằng browser cùa bạn.   Như vậy, bạn đã truy cập thành công vào ứng dụng ShareNote bằng browser của bạn sử dụng giao thức HTTP.\nKiểm tra khả năng tự mở rộng của ứng dụng ShareNote được triển khai  Kiểm tra số lượng instance hiện có trong Auto Scaling Group là 1.  Khởi dộng Webserver Stress Tool 8 để tiến hành tạo số lượng truy cập lớn đến Endpoint của Load Balancer. Nhấn vào tab Test Type và nhập thông số như hình dưới đây:  Nhấn vào tab URLs, copy DNSName của ứng dụng ShareNote vào ô URL, và nhấn Start Test  Sau một khoảng thời gian, kiểm tra phản hồi của Auto Scaling Group. Ta thấy số lượng instance được tăng lên số lượng tối đa mà chúng ta thiết lập là 3.  Kiểm tra truy cập vào ứng dụng từ trình duyệt không bị gián đoạn.   Chúc mừng bạn vừa hoàn thành bài thực hành Triển khai ứng dụng ShareNote với Auto Scaling Group và Elastic Load Balancer.\n"
},
{
	"uri": "/vi/7-clean-up/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ dọn dẹp tài nguyên theo thứ tự như sau:\n Xóa Auto Scaling Group:  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Auto Scaling Groups Chọn Auto Scaling Group liên quan tới bài lab. Click Delete Gõ delete vào ô trống và nhấn delete   Xóa Load Balancer:  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Load Balancers Chọn Load Balancer liên quan tới bài lab. Click Actions. Click Delete.   Xóa Target Group:  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Target Groups Chọn Target Group liên quan tới bài lab. Click Actions. Click Delete. Click Yes, delete   Xóa Launch Template:  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Launch Templates Chọn Launch Template liên quan tới bài lab. Click Actions. Click Delete template Gõ delete vào ô trống và nhấn delete   Xóa AMI:  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn AMIs Chọn AMI liên quan tới bài lab. Click Actions. Click Deregister. Click Continue.   Terminate EC2 instance  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Intances Chọn tất cả EC2 Instance liên quan tới bài lab. Click Actions. Click Manage Instance State. Chọn Terminate. Click Change State   Xóa DB Instance  Truy cập RDS Management Console Trên thanh điều hướng bên trái, chọn Databases Chọn tất cả DB Instance liên quan tới bài lab. Click Actions. Click Delete Bỏ chọn Create final snapshot? và chọn I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available Gõ delete me vào ô trống. Click Delete   Xóa Security Group  Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Security Groups Chọn tất cả Security Groups liên quan tới bài lab. Click Actions. Click Delete security groups Click Delete    "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]