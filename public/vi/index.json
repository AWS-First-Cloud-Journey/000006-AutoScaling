[
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Trong bài thực hành này, chúng ta sẽ tiến hành triển khai ứng dụng sử dụng Auto Scaling Group để đảm bảo khả năng mở rộng linh hoạt theo nhu cầu của người dùng. Chúng ta cũng sẽ triển khai Load Balancer để cân bằng tải và phân phối yêu cầu truy cập từ người dùng đến Application Tier.\nHãy đảm bảo bạn đã tham khảo tài liệu Triển khai Ứng dụng FCJ Management trên Máy ảo Windows/AmazonLinux và hiểu cách triển khai ứng dụng trên máy ảo. Chúng ta sẽ sử dụng máy ảo FCJ Management đã triển khai để thực hiện việc triển khai và mở rộng trong Auto Scaling Group.\nAuto Scaling Group Auto Scaling Group (Nhóm co giãn tự động) là một nhóm các EC2 Instance. Nhóm này có khả năng co giãn số lượng các EC2 Instance thành viên dựa trên các chính sách co giãn mà bạn thiết lập.\nLaunch Template Launch Template (Khuôn mẫu khởi tạo) là một tính năng giúp bạn tạo mẫu cho việc khởi tạo các EC2 Instance. Điều này giúp tự động hóa và đơn giản hóa việc khởi tạo các EC2 Instance cho dịch vụ Auto Scaling.\nLoad Balancer Load Balancer (Máy cân bằng tải) là một công cụ giúp phân phối lưu lượng dữ liệu đến các tài nguyên AWS (trong trường hợp này là các EC2 Instance) trong Target Group.\nTarget Group Target Group (Nhóm mục tiêu) là một nhóm các tài nguyên AWS sẽ nhận lưu lượng dữ liệu được phân phối và chuyển tiếp bởi Load Balancer.\nTrong bài thực hành này, chúng ta sẽ thực hiện triển khai ứng dụng bằng Auto Scaling Group để đảm bảo khả năng mở rộng linh hoạt theo nhu cầu của người dùng. Đồng thời, chúng ta cũng sẽ triển khai Load Balancer để cân bằng tải và phân phối yêu cầu truy cập từ phía người dùng đến Application Tier của chúng ta.\nHãy đảm bảo bạn đã tham khảo tài liệu Triển khai Ứng dụng FCJ Management trên Máy ảo Windows/AmazonLinux và đã nắm vững cách triển khai ứng dụng trên máy ảo. Chúng ta sẽ cần sử dụng máy ảo FCJ Management đã triển khai để thực hiện việc triển khai đồng loạt và mở rộng trong Auto Scaling Group.\n"
},
{
	"uri": "/vi/2-prerequiste/2.1-createvpc/",
	"title": "Tạo VPC",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Truy cập vào AWS Management Console\nTìm VPC Chọn VPC Trong giao diện VPC\nChọn Your VPCs Chọn Create VPC Trong giao diện Create VPC\nChọn VPC and more Name, nhập tên VPC của bạn. Trong bài lab này, ta đặt tên là aws-lab IPv4 CIDR block, nhập 10.0.0.0/16 Chọn Create VPC Tạo VPC thành công và chọn View VPC Thông tin chi tiết VPC vừa tạo.\nThực hiện cấp phát IP public.\nChọn Subnets Chọn public subnet Chọn Edit subnet settings Chọn Enable auto-assign public IPv4 address. Chọn Save Kiểm tra đã cấp phát thành công. Thực hiện cấp phát cho Public subnet còn lại (làm tương tự). "
},
{
	"uri": "/vi/",
	"title": "Triển khai ứng dụng FCJ Management với Auto Scaling Group",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng FCJ Management với Auto Scaling Group Tổng quan Trong hướng dẫn này, chúng ta sẽ thực hiện triển khai ứng dụng bằng cách sử dụng Auto Scaling Group để đảm bảo khả năng mở rộng linh hoạt theo nhu cầu của người truy cập. Ngoài ra, chúng ta cũng sẽ triển khai Load Balancer để cân bằng tải và phân phối yêu cầu từ người dùng đến Application Tier của ứng dụng.\nHãy đảm bảo bạn đã xem qua tài liệu Triển khai Ứng dụng FCJ Management trên Máy ảo Windows/AmazonLinux để nắm vững cách triển khai ứng dụng trên máy ảo. Chúng ta sẽ cần sử dụng máy ảo FCJ Management đã triển khai để thực hiện việc triển khai đồng loạt và mở rộng trong Auto Scaling Group.\nAuto Scaling Group Auto Scaling Group (nhóm co giãn tự động) là một nhóm các EC2 Instance. Nhóm này có khả năng tự động điều chỉnh số lượng các EC2 Instance thành viên dựa trên các chính sách co giãn mà bạn đặt ra.\nLaunch Template Launch Template (khuôn mẫu khởi tạo) là một tính năng cho phép bạn tạo ra các khuôn mẫu để khởi tạo EC2 Instance. Điều này giúp bạn tự động hóa và đơn giản hóa việc khởi tạo các EC2 Instance cho dịch vụ Auto Scaling (co giãn tự động).\nLoad Balancer Load Balancer (máy cân bằng tải) là một công cụ cho phép phân phối lưu lượng dữ liệu tới các tài nguyên AWS (trong trường hợp này là các EC2 Instances) trong một Target Group cụ thể.\nTarget Group Target Group (nhóm mục tiêu) là một nhóm các tài nguyên AWS sẽ nhận lưu lượng dữ liệu từ Load Balancer và tiếp tục truyền chuyển nó.\nNội dung Giới thiệu Các bước chuẩn bị Khởi tạo Template Khởi tạo Target Group Khởi tạo LoadBalancer Khởi tạo Auto Scaling Group Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Các bước chuẩn bị Trong bài thực hành này, chúng ta cần chuẩn bị một số dịch vụ để có thể tiến hành triển khai ứng dụng FCJ Management sử dụng Auto Scaling Group cùng với Elastic Load Balancer. Một cách tổng quan, chúng ta sẽ triển khai ứng dụng FCJ Management theo kiến trúc như sau:\nNội dung Tạo VPC Tạo Security Group cho FCJ Management instance Tạo Security Group cho DB instance Tạo DB Subnet Group Tạo DB instance Tạo EC2 instance Kết nối EC2 instance Kết nối DB instance Triển khai ứng dụng Khởi tạo AMI từ máy ảo "
},
{
	"uri": "/vi/2-prerequiste/2.2-createsecuritygroup/",
	"title": "Tạo Security Group",
	"tags": [],
	"description": "",
	"content": "Tạo Security Group cho FCJ Management Chúng ta sẽ tạo Security group cho ứng dụng.\nTrong giao diện VPC, chọn Security Group Chọn Create security group Thực hiện cấu hình Security Group\nSecurity group name, nhập FCJ-Management-SG Description, nhập Security Group for FCJ Management VPC, chọn VPC vừa tạo. Cấu hình Inbound rules\nĐầu tiên phải cấu hình SSH port 22 và Source: MyIP để có thể truy cập vào instance. Tiếp theo là HTTP port 80. Custom TCP port 5000 dành cho FCJ Management HTTPS port 443. Kiểm tra Outbound rules và chọn Create security group Hoàn thành tạo Security Group cho ứng dụng FCJ Management. Kiểm tra thông tin chi tiết Security Group. "
},
{
	"uri": "/vi/3-launchtemplate/",
	"title": "Khởi tạo Launch Template",
	"tags": [],
	"description": "",
	"content": "Khởi tạo Launch Template Ở phần này, bạn sẽ tạo một Launch Template sử dụng AMI bạn đã tạo từ Amazon Linux 2 Instance ở bước trước.\nTruy cập vào EC2 Chọn Launch Templates Chọn Create launch template Trong giao diện Create launch template Launch template name, nhập FCJ-Management-template Template version description, nhập Template for FCJ Management Thực hiện chọn AMI Chọn My AMIs Chọn Owned by me Chọn FCJ-Management-AMI Thực hiện chọn Instance type Chọn t2.micro Key pair, chọn aws-fcj-key đã tạo lúc tạo EC2 instance. Thực hiện cấu hình Network Subnet, chọn public subnet Firewall (Security Group), chọn Select existing security group Chọn FCJ-Management-SG Kiểm tra lại và thực hiện Create launch template Thực hiện thành công và chọn View launch templates Xem template vừa khởi tạo. Kết nối lại EC2 instance (xem hướng dẫn tại đây) Lần lượt dùng các câu lệnh: sudo su\rcd 000004-EC2\rnpm start Sau đó truy cập lại ứng dụng. "
},
{
	"uri": "/vi/2-prerequiste/2.3-createsgdb/",
	"title": "Tạo Security Group DB",
	"tags": [],
	"description": "",
	"content": "Tạo security group cho Database instance. Chúng ta tạo Security group cho Database instance. Để đảm bảo bảo mật nên không cấu hình chung Security group của ứng dụng.\nChọn Security Group Chọn Create security group Thực hành cấu hình security group\nSecurity Group name, nhập `FCJ-Mangement-DB-SG` Description, nhập `Security Group for DB instance` Chọn vpc vừa tạo Cấu hình Inbound rules\nChọn Add rule Chọn MYSQL/Aurora port 3306 Sau đó chọn Soure là FCJ-Management-SG Chọn Create security group Hoàn thành tạo Security group cho database. "
},
{
	"uri": "/vi/4-launchtargetgroup/",
	"title": "Khởi tạo Target Group",
	"tags": [],
	"description": "",
	"content": "Khởi tạo Target Group Truy cập giao diện EC2: Chọn Target Groups Chọn Create target group Thực hiện cấu hình: Chọn Instances Trong trang Specify group details, thiết lập các thông số sau cho target group: Target group name: Nhập tên của target group (VD: FCJ-Management-TG). Protocol: HTTP. Port: 5000 (Port sử dụng bởi FCJ Management). Các mục còn lại để mặc định. Chọn Next Trong giao diện Available instances: Chọn instance FCJ-Management Chọn port 5000 Chọn Include as pending below (nếu không chọn, khi truy cập bằng DNS Load Balancer có thể gặp lỗi HTTP 503: Service unavailable) Kiểm tra lại Chọn Create target group Trong giao diện Register pending targets only, chọn Continue Hoàn thành tạo Target group "
},
{
	"uri": "/vi/2-prerequiste/2.4-createdbsubnetgroup/",
	"title": "Tạo DB Subnet Group",
	"tags": [],
	"description": "",
	"content": "Tạo DB Subnet Group Truy cập vào RDS\nChọn Subnet groups Chọn Create DB subnet group Trong giao diện Create DB subnet group\nName, nhập FCJ-Management-Subnet-Group Description, nhập Subnet Group for FCJ Management Chọn VPC đã tạo. Tiến hành cấu hình subnet\nChọn các AZ Chọn subnet Chọn Create Thành công tạo DB Subnet Group "
},
{
	"uri": "/vi/5-launchloadbalancer/",
	"title": "Khởi tạo Load Balancer",
	"tags": [],
	"description": "",
	"content": "Khởi tạo Load Balancer Truy cập vào EC2\nChọn Load Balancers Chọn Create Load Balancer Phần Load balancer types\nChọn HTTP/HTTPS Chọn Create Trong giao diện Create Application Load Balancer\nLoad balancer name, nhập FCJ-Management-LB Scheme, chọn Internet-facing IP address type, chọn IPv4 Thực hiện cấu hình Network mapping\nVPC, chọn VPC đã tạo trong bài lab. Mapping, chọn ap-southeast-1a và ap-southeast-1b Chọn subnet Cấu hình security group, chọn FCJ-Management-SG.\nPhần Listeners and routing, trong Default actions chọn FCJ-Management-TG Kiểm tra lại và chọn Create load balancer Tạo Application Load Balancer thành công và chọn View load balancer Trong giao diện Load Balancer. Quá trình tạo Load Balancer sẽ mất khoảng 5-10 phút để hoàn thành. Bạn có thể kiểm tra sự thay đổi trạng thái từ provisioning sang active ở danh sách Load Balancer.\nChọn FCJ-Management-LB Sao chép DNS name của Load Balancer. Truy cập bằng cách dán DNS name vào trình duyệt. Tuy nhiên lúc này chúng ta chỉ có 1 máy chủ EC2 duy nhất. Tiếp theo chúng ta sẽ tiến hành cấu hình tính năng Auto Scaling Group, giúp tự động tăng số lượng EC2 instance của chúng ta khi lượng truy cập tăng cao.\n"
},
{
	"uri": "/vi/2-prerequiste/2.5-createdbinstance/",
	"title": "Tạo DB instance",
	"tags": [],
	"description": "",
	"content": "Tạo DB instance Truy cập vào AWS Management Console\nTìm RDS Chọn RDS Trong giao diện RDS\nChọn Databases CHọn Create database Chọn phương thức tạo database\nChọn Standard create Cấu hình Engine database\nChọn MySQL Cấu hình Template\nChọn Dev/Test Đối với Availability and durability, chọn Mutil-AZ DB instance Tiếp theo, thực hiện cài đặt chi tiết\nDB instance identifier, nhập fcj-management-db-instance Master user, nhập admin Master password, nhập tùy ý của bạn (trong bài lab, nhập 123Vodanhphai) Confirm password, nhập lại password 1 lần nữa. Thực hiện cấu hình network cho db instance\nNetwork type, chọn IPv4 VPC, chọn asg-vpc đã tạo Subnet group, chọn subnet group đã tạo. VPC security group, Chọn Choose existing Security Group, chọn FCJ-Management-DB-SG (tránh nhầm lẫn với SG của web). Khởi tạo Database với tên awsuer, còn lại để mặc định. Kiểm tra lại và chọn Create database Khởi tạo DB instance trong 10 phút. Khi Status chuyển sang Available là hoàn thành.\nChọn vào db instance vừa tạo. Trong giao diện Connectivity \u0026amp; security\nLưu trữ giá trị Endpoint Kiểm tra port 3306 "
},
{
	"uri": "/vi/6-launchautoscalinggroup/",
	"title": "Khởi tạo Auto Scaling Group",
	"tags": [],
	"description": "",
	"content": "Khởi tạo Auto Scaling Group Trong phần này, chúng ta sẽ thực hiện triển khai một Auto Scaling Group cho ứng dụng FCJ Management. Điều này đảm bảo rằng ứng dụng của chúng ta sẽ luôn sẵn sàng với tính độ tin cậy cao và khả năng tăng số lượng EC2 instance khi có nhu cầu.\nTruy cập vào EC2: Chọn Auto Scaling Groups Chọn Create Auto Scaling group Nhập tên cho Auto Scaling Group: FCJ-Management-ASG Cấu hình template: Chọn Launch template và chọn FCJ-Management-template Chọn Next Cấu hình Network: Chọn VPC đã tạo Chọn AZ và subnet Chọn Next Cấu hình Load balancing: Chọn Attach to an existing load balancer Chọn Choose from your load balancer target groups Chọn FCJ-Management-TG Chọn Next Cấu hình kích thước nhóm và chính sách scaling: Desired capacity: Nhập 1 (Mặc định) Minimum capacity: Nhập 1 (Mặc định) Maximum capacity: Nhập 3 Tại mục Scaling policies - tùy chọn: Trong bài thực hành này, chọn Target tracking scaling policy để đơn giản hóa cho bước kiểm tra tiếp theo. Bạn có thể thiết lập chính sách scale tài nguyên theo nhu cầu của bạn. Scaling policy name: Target Tracking Policy Metric type: Chọn Application Load Balancer request count per target Target group: Chọn FCJ-Management-TG Target value: Nhập 30 Chọn Next Chọn Create a topic Cấu hình Add notifications và chọn Next Kiểm tra email và thực hiện Confirm subscription Chọn Create Auto Scaling group Hoàn thành việc tạo Auto Scaling groups Quá trình khởi tạo Auto Scaling Group sẽ được thực hiện. Auto Scaling Group vừa tạo sẽ hiển thị trong danh sách, bạn có thể chọn để xem thông tin chi tiết. Để theo dõi các EC2 instance hiện có trong Auto Scaling Group, truy cập trang Instance management. Các instance có trạng thái InService là các instance đã sẵn sàng hoạt động. "
},
{
	"uri": "/vi/2-prerequiste/2.6-createec2/",
	"title": "Tạo EC2 instance",
	"tags": [],
	"description": "",
	"content": "Tạo EC2 instance Truy cập vào AWS Management Console: Tìm EC2 Chọn EC2 Trong giao diện EC2: Chọn Instances Chọn Launch instances Đặt tên cho instance, nhập FCJ-Management Thực hiện cho AMI: Chọn Quick Start Chọn Amazon Linux Chọn Instance type: Chọn t2.micro Chọn Create new key pair Cấu hình key pair. Thực hiện cấu hình Network: VPC, chọn VPC đã tạo. Subnet, chọn Public subnet Kiểm tra đã Auto-assign public IP chưa?. Nếu chưa, xem lại bước cấp phát public IP ở bước tạo VPC. Chọn Select existing security group rồi chọn FCJ-Management-SG Chọn Launch instance: Khởi tạo instance thành công và chọn View all instances: Xem chi tiết instance và ghi chú lại Public IPv4 address để thực hiện kết nối ở bước sau: "
},
{
	"uri": "/vi/2-prerequiste/2.7-connectec2/",
	"title": "Kết nối EC2 instance",
	"tags": [],
	"description": "",
	"content": "Kết nối EC2 instance Sử dụng MobaXterm để kết nối SSH vào instance qua cổng 22.\nChọn Session Trong phần Session settings,\nRemote host, nhập Public IPv4 address của instance Specify username, nhập ec2-user Kiểm tra port 22 Chọn Advanced SSH settings Chọn Use private key và chọn keypair của instance. Chọn OK Thực hiện theo hướng dẫn các hình. Kết nối EC2 instance thành công.\nCài đặt node version manager (nvm) bằng cách nhập nội dung sau vào dòng lệnh sau:\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash Kích hoạt nvm bằng cách nhập nội dung sau vào dòng lệnh và Sử dụng nvm để cài đặt phiên bản mới nhất của Node.js bằng cách nhập nội dung sau vào dòng lệnh. . ~/.nvm/nvm.sh\rnvm install 16 Kiểm tra đã cài đặt nodejs thành công node -v\rnpm -v "
},
{
	"uri": "/vi/7-result/",
	"title": "Kiểm tra kết quả",
	"tags": [],
	"description": "",
	"content": "Kiểm tra kết quả Trong bài thực hành này, chúng ta sẽ kiểm tra truy cập tới ShareNote và tiến hành tăng số lượng yêu cầu truy cập đến ứng dụng thông qua việc mở đồng loạt nhiều kết nối sử dụng công cụ Webserver Stress Tool 8. Bạn hãy nhấn vào Webserver Stress Tool 8 để tải về.\nThực hiện tải Webserver Stress Tool 8 Kiểm tra khả năng tự mở rộng của ứng dụng FCJ Management được triển khai\nGiải nén file zip và cài đặt Webserver Stress Tool 8 với tùy chọn mặc định. Khởi động Webserver Stress Tool 8 để tiến hành tạo số lượng truy cập lớn đến Endpoint của Load Balancer. Nhấn vào tab Test Type và nhập thông số như hình dưới đây: Run Unit: 100000 Number of Users: 101 Click Delay: 1 Nhấn vào tab URLs, copy DNSName của ứng dụng FCJ Management vào ô URL (DNSName khi bạn tạo Load Balancer ở bước 5.Khởi tạo Load Balancer), và nhấn Start Test Sau một khoảng thời gian, kiểm tra phản hồi của Auto Scaling Group. Ta thấy số lượng instance được tăng lên số lượng tối đa mà chúng ta thiết lập là 3. Kiểm tra truy cập vào ứng dụng từ trình duyệt không bị gián đoạn. Xem kết quả logfile Xem giao diện của EC2 khi chạy ứng dụng. Chúc mừng bạn vừa hoàn thành bài thực hành Triển khai ứng dụng FCJ Management với Auto Scaling Group và Elastic Load Balancer.\nBạn sẽ nhận được mail thông báo.\n"
},
{
	"uri": "/vi/8-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Chúng ta sẽ dọn dẹp tài nguyên theo thứ tự như sau:\nXóa Auto Scaling Group: Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Auto Scaling Groups Chọn Auto Scaling Group liên quan tới bài lab. Click Delete Gõ delete vào ô trống và nhấn delete Xóa Load Balancer: Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Load Balancers Chọn Load Balancer liên quan tới bài lab. Click Actions. Click Delete. Xóa Target Group: Truy cập **EC2 Management Console Trên thanh điều hướng bên trái, chọn Target Groups Chọn Target Group liên quan *tới bài lab. Click Actions. Click Delete. Click Yes, delete Xóa Launch Template: Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Launch Templates Chọn Launch Template liên quan tới bài lab. Click Actions. Click Delete template Gõ delete vào ô trống và nhấn delete Xóa AMI: Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn AMIs Chọn AMI liên quan tới bài lab. Click Actions. Click Deregister. Click Continue. Terminate EC2 instance Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Intances Chọn tất cả EC2 Instance liên quan tới bài lab. Click Actions. Click Manage Instance State. Chọn Terminate. Click Change State Xóa DB Instance Truy cập RDS Management Console Trên thanh điều hướng bên trái, chọn Databases Chọn tất cả DB Instance liên quan tới bài lab. Click Actions. Click Delete Bỏ chọn Create final snapshot? và chọn I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available Gõ delete me vào ô trống. Click Delete Xóa Security Group Truy cập EC2 Management Console Trên thanh điều hướng bên trái, chọn Security Groups Chọn tất cả Security Groups liên quan tới bài lab. Click Actions. Click Delete security groups Click Delete "
},
{
	"uri": "/vi/2-prerequiste/2.8-connectdbinstance/",
	"title": "Kết nối DB instance",
	"tags": [],
	"description": "",
	"content": "Kết nối DB instance Sử dụng quyền user root sudo su Cài đặt MySQL command-line client yum install mariadb Kiểm tra cài đặt thành công mysql --version Kết nối từ MySQL command-line client (unencrypted)\nĐối với tham số -h, hãy thay thế DNS name (endpoint) cho DB instance Đối với tham số -P, hãy thay thế cổng cho DB instance. (3306) Đối với tham số -u, thay bằng master user Nhập master user password mysql -h db-instance.crmmitoajvxx.us-east-1.rds.amazonaws.com -P 3306 -u admin -p Kết nối DB instance thành công. Tiến hành kiểm tra các database trong instance bằng lệnh sẽ in ra danh sách tất cả các cơ sở dữ liệu. SHOW DATABASES; Chọn cơ sở dữ liệu để thực hiện các thay đổi đối với nó bằng cách sử dụng USE. USE \u0026lt;database đã tạo\u0026gt;; Thực hiện tạo bảng trong database awsuser bằng lệnh CREATE TABLE. CREATE TABLE `awsfcjuser`.`user` ( `id` INT NOT NULL AUTO_INCREMENT , `first_name` VARCHAR(45) NOT NULL , `last_name` VARCHAR(45) NOT NULL , `email` VARCHAR(45) NOT NULL , `phone` VARCHAR(45) NOT NULL , `comments` TEXT NOT NULL , `status` VARCHAR(10) NOT NULL DEFAULT \u0026#39;active\u0026#39; , PRIMARY KEY (`id`)) ENGINE = InnoDB; Xác minh rằng bảng được tạo bằng lệnh DESCRIBE DESCRIBE user; Chèn thông tin vào trong bảng dữ liệu bằng lệnh INSERT INTO INSERT INTO `user` (`id`, `first_name`, `last_name`, `email`, `phone`, `comments`, `status`) VALUES\r(NULL, \u0026#39;Amanda\u0026#39;, \u0026#39;Nunes\u0026#39;, \u0026#39;anunes@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Alexander\u0026#39;, \u0026#39;Volkanovski\u0026#39;, \u0026#39;avolkanovski@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Khabib\u0026#39;, \u0026#39;Nurmagomedov\u0026#39;, \u0026#39;knurmagomedov@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Kamaru\u0026#39;, \u0026#39;Usman\u0026#39;, \u0026#39;kusman@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Israel\u0026#39;, \u0026#39;Adesanya\u0026#39;, \u0026#39;iadesanya@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Henry\u0026#39;, \u0026#39;Cejudo\u0026#39;, \u0026#39;hcejudo@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Valentina\u0026#39;, \u0026#39;Shevchenko\u0026#39;, \u0026#39;vshevchenko@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Tyron\u0026#39;, \u0026#39;Woodley\u0026#39;, \u0026#39;twoodley@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Rose\u0026#39;, \u0026#39;Namajunas \u0026#39;, \u0026#39;rnamajunas@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Tony\u0026#39;, \u0026#39;Ferguson \u0026#39;, \u0026#39;tferguson@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Jorge\u0026#39;, \u0026#39;Masvidal \u0026#39;, \u0026#39;jmasvidal@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Nate\u0026#39;, \u0026#39;Diaz \u0026#39;, \u0026#39;ndiaz@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Conor\u0026#39;, \u0026#39;McGregor \u0026#39;, \u0026#39;cmcGregor@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Cris\u0026#39;, \u0026#39;Cyborg \u0026#39;, \u0026#39;ccyborg@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Tecia\u0026#39;, \u0026#39;Torres \u0026#39;, \u0026#39;ttorres@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Ronda\u0026#39;, \u0026#39;Rousey \u0026#39;, \u0026#39;rrousey@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Holly\u0026#39;, \u0026#39;Holm \u0026#39;, \u0026#39;hholm@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;),\r(NULL, \u0026#39;Joanna\u0026#39;, \u0026#39;Jedrzejczyk \u0026#39;, \u0026#39;jjedrzejczyk@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;active\u0026#39;); Sử dụng lệnh SELECT để hiển thị bảng: SELECT * FROM user; Sử dụng exit đề rời khỏi. Nếu không thể ngắt kết nối với DB instance, hãy dùng tổ hợp phím Ctrl+C "
},
{
	"uri": "/vi/2-prerequiste/2.9-deployapp/",
	"title": "Triển khai ứng dụng FCJ Management",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng FCJ Management Chúng ta sử dụng git để clone source code. Trước hết, cài đặt git bằng lệnh sau: sudo yum install git Sử dụng lệnh git init được sử dụng để tạo, khởi tạo một kho chứa Git mới (Git Repo) ở local. git init Thực hiện clone repository code ứng dụng git clone https://github.com/First-Cloud-Journey/000004-EC2.git Đến thư mục của bài lab 000004-EC2 cd 000004-EC2 NPM là viết tắt của Node package manager là một công cụ tạo và quản lý các thư viện lập trình Javascript cho Node.js. Sử dụng npm init khởi tạo project sẽ tạo ra file package.json mẫu. npm init Nếu trường hợp chưa cài đặt Nodejs bạn có thể tham khảo Cài đặt Nodejs trên Amazon Linux Tiếp theo chúng ta thực hiện dependencies installation\nexpress Dotenv express-handlebars body-parser mysqs npm install express dotenv express-handlebars body-parser mysql Thực hiện kiểm tra và tạo một file .env sử dụng vi để cấu hình database. Tạo file .env bằng cách sử dụng câu lệnh touch .env Dùng vi để mở cấu hình. Thực hiện cấu hình database DB_HOST = \u0026#39;db-instance.crmmitoajvxx.us-east-1.rds.amazonaws.com\u0026#39;\rDB_NAME = \u0026#39;awsfcjuser\u0026#39;\rDB_USER = \u0026#39;admin\u0026#39;\rDB_PASS = \u0026#39;123Vodanhphai\u0026#39; Trong đó, DB_HOST là Enpoint của DB instance DB_NAME là tên database đã được tạo trong DB instance DB_USER là tên người dùng database đã được tạo trong DB instance DB_PASS là mật khẩu database đã được tạo trong DB instance Khởi động lại Express server. Sử dụng Nodemon để tiết kiệm thời gian npm install --save-dev nodemon Khởi động local server npm start Truy cập vào EC2 Chọn Instances Chọn FCJ-Management instance Sao chép Public IPv4 address Sử dụng trình duyệt và dán Public IPv4 address và port để kiểm tra ứng dụng. Cú pháp \u0026lt;Public IPv4 address\u0026gt;:5000 Ví dụ: 3.91.32.39:5000 "
},
{
	"uri": "/vi/2-prerequiste/2.10-createami/",
	"title": "Khởi tạo AMI từ Máy ảo",
	"tags": [],
	"description": "",
	"content": "Khởi tạo AMI từ Máy ảo Ở bước này, bạn sẽ khởi tạo một Amazon Machine Image (AMI) cho Amazon Linux Instance vừa được thiết lập ở bước trước. AMI là một bản chụp cấu hình của EC2 Instance cho phép bạn triển khai nhiều EC2 Instance với cấu hình tương tự với EC2 Instance gốc. AMI thường được sử dụng bên trong Launch Template để tạo khuôn mẫu cho các EC2 Instances.\nTruy cập vào EC2 Chọn Instances Chọn FCJ-Management instance Chọn Actions Chọn Image and templates Chọn Create image Cấu hình Template Image name, nhập FCJ-Management-AMI Image description, nhập AMI for FCJ-Management Chọn Create image Quá trình khởi tạo AMI mất khoảng 5 phút. Sau 5 phút, chúng ta thấy Status chuyển sang Available Chúng ta đã hoàn thành các bước chuẩn bị cho việc triển khai FCJ Management với Auto Scaling Group.\nỞ phần kế tiếp, chúng ta sẽ bắt đầu khởi tạo và triển khai nội dung chính của bài thực hành này.\n"
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]